// --------------------------------------------------------
 // Code generated by Papyrus Java
// --------------------------------------------------------

package openadmin.model;


/**
/**
 *  Control entity that contains the user's information
 *	@version  1.1
 *  Created  18-03-2009
 *  LastModified  12-03-2022
 *  @author Alfred Oliver
 *  @author Vicent Borja
*/


import java.util.Date;

import org.hibernate.validator.constraints.Length;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Transient;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.Setter;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.Entity;
import openDao.annotation.NoSql;
import openDao.model.Base;


//@Name("user")
//@Scope(SESSION)
@Entity
@Table(name = "user", schema = "control", uniqueConstraints = @UniqueConstraint(columnNames = "description"))
@JsonIgnoreProperties(ignoreUnknown=true)

public class User implements Base, java.io.Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = -7985347343375007171L;
	/**
	 * 
	 */	
	//private static final long serialVersionUID = 10062101L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)	
	@Getter @Setter
	private Integer id;
	
	/** attribute that contains the user's complete name (description), unique value*/
	@NotNull
	@Length(min = 3, max = 30)
	@Getter @Setter
	private String description;
	
	@NotNull
	@Length(min = 3, max = 40)
	@Getter @Setter
	private String fullName;
	/**
	 * 
	 */
	@NotNull
	@Length(min = 4, max = 50)
	@Getter @Setter
	private String password;
	/**
	 * 
	 */
	/**
	 * 
	 */
	@NotNull
	@Length(min = 8, max = 30)
	@Getter @Setter
	private String identifier;
	/**
	 * 
	 */
	@Temporal(TemporalType.TIMESTAMP)	
	@NotNull
	@Getter @Setter
	private Date dateBegin;
	/**
	 * 
	 */
	@Temporal(TemporalType.TIMESTAMP)	
	@NotNull
	@Getter @Setter
	private Date dateEnd;
	/**
	 * 
	 */
	@NotNull
	@Length(min = 2, max = 2)
	//@Combo()
	@Getter @Setter
	private String language;
	/**
	 * 
	 */
	@Getter @Setter
	private boolean active;
	/**
	 * 
	 */
	@Length(max = 15)
	@Getter @Setter
	private String entityDefault;
	
	@Getter @Setter
	private boolean signature;
	
	@Getter @Setter
	private boolean territorio;
	
	@Getter @Setter
	private boolean tercer;
	
	
	
	/** Transient attribute that means that the system should make a log on any JPA operation of this class*/
	@Transient
	@Getter @Setter
	private boolean debuglog = true;

	/** Transient attribute that means that the system should make a detail log on any JPA operation of this class*/
	@Transient
	@Getter @Setter
	private boolean historiclog = false;

	
	public User() {
		
		
	}
	
	
	

	
}
